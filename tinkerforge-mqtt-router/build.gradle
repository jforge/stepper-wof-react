buildscript {
    ext {
        springBootVersion = '1.5.2.RELEASE'
    }
    repositories {
        //mavenCentral()
        maven {
            url "http://repo.jforge.online/nexus/content/repositories/public/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

group 'io.eol.echo.skill.tinkerforge'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: "org.springframework.boot"

compileJava {
    targetCompatibility = JavaVersion.VERSION_1_8
    sourceCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    // mavenCentral()
    maven {
        url "http://repo.jforge.online/nexus/content/repositories/public/"
    }
}

ext {
    tinkerforgeVersion = '2.1.11'
    pahoVersion = '1.1.1'
    fastClasspathScannerVersion = '1.9.18'
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.apache.httpcomponents:httpclient:4.5.1')
    compile('log4j:log4j:1.2.17')
    compile('org.slf4j:slf4j-api:1.7.+')
    compile('com.google.code.gson:gson:2.6.2')
    compile('com.fasterxml.jackson.core:jackson-databind:2.6.3')
    compile('org.apache.commons:commons-lang3:3.4')

    compile "io.github.lukehutch:fast-classpath-scanner:${fastClasspathScannerVersion}"
    compile "com.tinkerforge:tinkerforge:${tinkerforgeVersion}"
    compile "org.eclipse.paho:org.eclipse.paho.client.mqttv3:${pahoVersion}"

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('junit:junit:4.12')
}

jar {
    baseName = 'tinkerforge-mqtt-router'
    version = '1.0.0-SNAPSHOT'
}
